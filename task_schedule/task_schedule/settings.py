"""
Django settings for task_schedule project.

Generated by 'django-admin startproject' using Django 4.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.1/ref/settings/
"""
from django.core.management.commands.runserver import Command as runserver
runserver.default_port = "3000"
from urllib.parse import quote_plus
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-#56k^w0g@1wu9y-x#2(lc$1cu3m1ac4jv3y(mqdtg*sou^(m!x'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',

    'task.apps.TaskConfig',
    'django_celery_results',
    'django_celery_beat',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'task_schedule.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'task_schedule.wsgi.application'


# Database
# https://docs.djangoproject.com/en/4.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'testdb', 
        'USER': 'postgres',
        'PASSWORD': 'maruf15-1927@',
        'HOST': '127.0.0.1', 
        'PORT': '5432',
    }
}

# Password validation
# https://docs.djangoproject.com/en/4.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/4.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Dhaka'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.1/howto/static-files/

STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


##celery settings
#https://docs.celeryq.dev/en/stable/userguide/configuration.html
#CELERY_broker_url = 'redis://127.0.0.1:6379'
#broker_url = 'redis://127.0.0.1:6379'

broker_url = 'amqp://munna:1234@localhost:5672//'
timezone = 'Asia/Dhaka'
accept_content=['application/json']
result_serializer='json'
task_serializer='json'
#result_backend= 'db+postgresql://postgres:%s@localhost/testdb'%quote_plus("maruf15-1927@")
#result_backend_db = 'db+postgresql://postgres:%s@localhost/testdb'%quote_plus("maruf15-1927@")
CELERY_RESULT_EXTENDED = True

##its working properly for result backend after adding this line
#CELERY_RESULT_BACKEND = 'db+postgresql://postgres:%s@localhost/testdb'%quote_plus("maruf15-1927@")
#CELERY_RESULT_BACKEND_DB = 'db+postgresql://postgres:%s@localhost/testdb'%quote_plus("maruf15-1927@")

CELERY_RESULT_BACKEND = 'django-db'
CELERY_RESULT_BACKEND_DB = 'postgresql://..'

cache_backend = 'default'
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.db.DatabaseCache',
        'LOCATION': 'my_cache_table',
    }
}


#CELERY BEAT
CELERY_BEAT_SCHEDULER = 'django_celery_beat.schedulers:DatabaseScheduler'


#extra
#CELERY_RESULT_BACKEND = 'db+sqlite:///django-db'
#postgresql://..
#result_backend_db = 'postgresql://..'
#CELERY_RESULT_BACKEND_DB = ''.join(['postgresql+psycopg2://', os.getenv("DATABASE_USER"), ":", os.getenv("DATABASE_PASSWORD"), "@localhost/", os.getenv("DATABASE_NAME")]) 


#or 

# CELERY_RESULT_BACKEND = 'django-db'
# CELERY_RESULT_BACKEND_DB = 'db+postgres://localhost:5432/mydbname'
# CELERY_CACHE_BACKEND = 'django-cache'